/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ec.edu.espe.calculadora.resistencias.views;

import com.mongodb.client.MongoClient;

import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.geom.Line2D;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;

import static ec.edu.espe.calculadora.resistencias.views.Resistencia.DECIMAL_FORMAT;


public class CalcularVistaDeltaEstrella extends javax.swing.JDialog {
   
   private final Tipo tipo;
   
   private List<JTextField> resistencias;
   private final List<JComboBox<String>> unidades;
   
   private final MongoClient mongoClient = ConnectionDB.getMongoClient();
   
   private final JLabel labelDeltaEstrella = new JLabel();
   
   private final JLabel labelEstrellaDelta = new JLabel();
   private JComboBox<String> comboBoxRa;
   private JComboBox<String> comboBoxRb;
   private JComboBox<String> comboBoxRc;
   private JComboBox<String> comboBoxR1;
   private JComboBox<String> comboBoxR2;
   private JComboBox<String> comboBoxR3;
   
   private JTextField raTextField = new JTextField();
   private JTextField rbTextField = new JTextField();
   
   private JTextField rcTextField = new JTextField();
   
   private JTextField r2TextField = new JTextField();
   
   private JTextField r1TextField = new JTextField();
   
   private JTextField r3TextField = new JTextField();
   
   private final String urlDeltaEstrella = mongoClient.getDatabase("usuarios"
      ).getCollection("url").find().first().getString(
      "url-delta-estrella");
   private final String urlEstrellaDelta =
      mongoClient.getDatabase("usuarios").getCollection("url").find().first().getString(
      "url-estrella-delta");
   
   public CalcularVistaDeltaEstrella(java.awt.Frame parent, boolean modal, Tipo tipo) {
      super(parent, modal);
      initComponents();
      this.tipo = tipo;
      this.resistencias = new ArrayList<>();
      this.unidades = new ArrayList<>();
      generarResistencias();
      for(JTextField textField : resistencias) {
         textField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
               char caracter = evt.getKeyChar();
               if((Character.isLetter(caracter) || (caracter == KeyEvent.VK_SPACE))) {
                  evt.consume();
               }
            }
         });
      }
   }
   
   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        botonCalcular = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ecuacionLabel = new javax.swing.JTextArea();
        limpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Calculadora de resistencias");
        setIconImage(getIconImage());
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/edu/espe/calculadora/resistencias/images/numero-icono.png"))); // NOI18N
        jLabel2.setText("Ingrese la resistencia de cada una de las resistencias");

        botonCalcular.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        botonCalcular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ec/edu/espe/calculadora/resistencias/images/calcular-icono.png"))); // NOI18N
        botonCalcular.setText("Cacular");
        botonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalcularActionPerformed(evt);
            }
        });

        ecuacionLabel.setEditable(false);
        ecuacionLabel.setColumns(20);
        ecuacionLabel.setRows(5);
        jScrollPane1.setViewportView(ecuacionLabel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        limpiar.setText("Limpiar");
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 191, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(limpiar)
                .addGap(45, 45, 45)
                .addComponent(botonCalcular)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonCalcular)
                    .addComponent(limpiar))
                .addGap(24, 24, 24))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   
   private void botonCalcularActionPerformed(
      java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCalcularActionPerformed
      Resistencia resistencia = new Resistencia();
      
      List<Double> valores = new ArrayList<>();
      
      for(JTextField textField : resistencias) {
         if(textField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar el valor de todas las resistencias", "Error",
                                          JOptionPane.ERROR_MESSAGE);
            return;
         }
      }
      
      for(int i = 0; i < resistencias.size(); i++) {
         switch(unidades.get(i).getSelectedItem().toString()) {
            case "Ω" -> valores.add(Double.parseDouble(resistencias.get(i).getText()));
            case "KΩ" -> valores.add(Double.parseDouble(resistencias.get(i).getText()) * 1000);
            case "MΩ" -> valores.add(Double.parseDouble(resistencias.get(i).getText()) * 1000000);
         }
      }
      
      if(Tipo.DELTA_ESTRELLA == tipo) {
         ecuacionLabel.setText(resistencia.formulaDeltaEstrella(valores));
         cambiarImagenPonerResultadoDeltaEstrella(DECIMAL_FORMAT.format(resistencia.calcularDeltaEstrellaR1(valores)) + " Ω",
                                                  DECIMAL_FORMAT.format(resistencia.calcularDeltaEstrellaR2(valores)) + " Ω",
                                                  DECIMAL_FORMAT.format(resistencia.calcularDeltaEstrellaR3(valores)) + " Ω");
      }
      if(Tipo.ESTRELLA_DELTA == tipo) {
         ecuacionLabel.setText(resistencia.formulaEstrellaDelta(valores));
         cambiarImagenPonerResultadoEstrellaDelta(DECIMAL_FORMAT.format(resistencia.calcularEstrellaDeltaRA(valores)) + " Ω",
                                                  DECIMAL_FORMAT.format(resistencia.calcularEstrellaDeltaRB(valores)) + " Ω",
                                                  DECIMAL_FORMAT.format(resistencia.calcularEstrellaDeltaRC(valores)) + " Ω");
      }
      limpiarCampos();
      
   }//GEN-LAST:event_botonCalcularActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        if(Tipo.DELTA_ESTRELLA == tipo) {
            generarResistencias();
            r1TextField.setVisible(false);
            r2TextField.setVisible(false);
            r3TextField.setVisible(false);
           
           labelDeltaEstrella.setVisible(true);
           labelEstrellaDelta.setVisible(false);
            
            raTextField.setVisible(true);
            rbTextField.setVisible(true);
            rcTextField.setVisible(true);
            
            resistencias = new ArrayList<>();
            
            resistencias.add(raTextField);
            resistencias.add(rbTextField);
            resistencias.add(rcTextField);
            
            comboBoxRa.setVisible(true);
            comboBoxRb.setVisible(true);
            comboBoxRc.setVisible(true);
            
            jPanel1.add(labelDeltaEstrella);
            
            ecuacionLabel.setText("");
        }
       
       if(Tipo.ESTRELLA_DELTA == tipo) {
           generarResistencias();
           r1TextField.setVisible(true);
           r2TextField.setVisible(true);
           r3TextField.setVisible(true);
           
           labelDeltaEstrella.setVisible(false);
           labelEstrellaDelta.setVisible(true);
           
           raTextField.setVisible(false);
           rbTextField.setVisible(false);
           rcTextField.setVisible(false);
           
           resistencias = new ArrayList<>();
           
           resistencias.add(r1TextField);
           resistencias.add(r2TextField);
           resistencias.add(r3TextField);
           
           comboBoxR1.setVisible(true);
           comboBoxR2.setVisible(true);
           comboBoxR3.setVisible(true);
           
           jPanel1.add(labelEstrellaDelta);
           
           ecuacionLabel.setText("");
       }
    }//GEN-LAST:event_limpiarActionPerformed
   
   public Image getIconImage() {
      return new ImageIcon(getClass().getResource(
         "/ec/edu/espe/calculadora/resistencias/images" + "/resistor" + "-icono.png")).getImage();
   }
   
   private void generarResistencias() {
      if(Tipo.DELTA_ESTRELLA == tipo) {
         labelDeltaEstrella.setIcon(new ImageIcon(
            getClass().getResource(urlDeltaEstrella)));
         labelDeltaEstrella.setLocation(60, 30);
         labelDeltaEstrella.setSize(300, 310);
         
         jPanel1.add(labelDeltaEstrella);
         
         raTextField.setLocation(260, 200);
         raTextField.setSize(50, 30);
         TextPrompt placeholder = new TextPrompt("Ra", raTextField);
         placeholder.changeAlpha(0.75f);
         jPanel1.add(raTextField);
         
         
         comboBoxRa = new JComboBox<>();
         comboBoxRa.addItem("Ω");
         comboBoxRa.addItem("KΩ");
         comboBoxRa.addItem("MΩ");
         comboBoxRa.setLocation(260, 230);
         comboBoxRa.setSize(70, 30);
         jPanel1.add(comboBoxRa);
         resistencias.add(raTextField);
         unidades.add(comboBoxRa);
         
         
         rbTextField.setLocation(30, 200);
         rbTextField.setSize(50, 30);
         jPanel1.add(rbTextField);
         TextPrompt placeholder2 = new TextPrompt("Rb", rbTextField);
         placeholder2.changeAlpha(0.75f);
         
         comboBoxRb = new JComboBox<>();
         comboBoxRb.addItem("Ω");
         comboBoxRb.addItem("KΩ");
         comboBoxRb.addItem("MΩ");
         comboBoxRb.setLocation(30, 230);
         comboBoxRb.setSize(70, 30);
         jPanel1.add(comboBoxRb);
         resistencias.add(rbTextField);
         unidades.add(comboBoxRb);
         
         
         rcTextField.setLocation(140, 30);
         rcTextField.setSize(50, 30);
         jPanel1.add(rcTextField);
         TextPrompt placeholder3 = new TextPrompt("Rc", rcTextField);
         placeholder3.changeAlpha(0.75f);
         
         comboBoxRc = new JComboBox<>();
         comboBoxRc.addItem("Ω");
         comboBoxRc.addItem("KΩ");
         comboBoxRc.addItem("MΩ");
         comboBoxRc.setLocation(140, 60);
         comboBoxRc.setSize(70, 30);
         jPanel1.add(comboBoxRc);
         resistencias.add(rcTextField);
         unidades.add(comboBoxRc);
         
         
      }
      if(Tipo.ESTRELLA_DELTA == tipo) {
         ImageIcon imageIcon = new ImageIcon(
            getClass().getResource(urlEstrellaDelta));
         labelEstrellaDelta.setIcon(imageIcon);
         labelEstrellaDelta.setLocation(60, 20);
         labelEstrellaDelta.setSize(300, 310);
         
         jPanel1.add(labelEstrellaDelta);
         r1TextField.setLocation(60, 30);
         r1TextField.setSize(50, 30);
         jPanel1.add(r1TextField);
         TextPrompt placeholder = new TextPrompt("R1", r1TextField);
         placeholder.changeAlpha(0.75f);
         
         comboBoxR1 = new JComboBox<>();
         comboBoxR1.addItem("Ω");
         comboBoxR1.addItem("KΩ");
         comboBoxR1.addItem("MΩ");
         comboBoxR1.setLocation(60, 60);
         comboBoxR1.setSize(70, 30);
         jPanel1.add(comboBoxR1);
         
         resistencias.add(r1TextField);
         unidades.add(comboBoxR1);
         
         r2TextField.setLocation(230, 150);
         r2TextField.setSize(50, 30);
         jPanel1.add(r2TextField);
         TextPrompt placeholder2 = new TextPrompt("R2", r2TextField);
         placeholder2.changeAlpha(0.75f);
         
         comboBoxR2 = new JComboBox<>();
         comboBoxR2.addItem("Ω");
         comboBoxR2.addItem("KΩ");
         comboBoxR2.addItem("MΩ");
         comboBoxR2.setLocation(230, 180);
         comboBoxR2.setSize(70, 30);
         jPanel1.add(comboBoxR2);
         
         resistencias.add(r2TextField);
         unidades.add(comboBoxR2);
         
         
         r3TextField.setLocation(70, 200);
         r3TextField.setSize(50, 30);
         jPanel1.add(r3TextField);
         TextPrompt placeholder3 = new TextPrompt("R3", r3TextField);
         placeholder3.changeAlpha(0.75f);
         
         comboBoxR3 = new JComboBox<>();
         comboBoxR3.addItem("Ω");
         comboBoxR3.addItem("KΩ");
         comboBoxR3.addItem("MΩ");
         comboBoxR3.setLocation(70, 230);
         
         comboBoxR3.setSize(70, 30);
         jPanel1.add(comboBoxR3);
         
         resistencias.add(r3TextField);
         unidades.add(comboBoxR3);
         
         
      }
      
      
   }
   
   private void limpiarCampos() {
      for(JTextField textField : resistencias) {
         textField.setText("");
      }
   }
   
   private void cambiarImagenPonerResultadoDeltaEstrella(String r1, String r2, String r3){
      labelDeltaEstrella.setVisible(false);
      labelEstrellaDelta.setVisible(true);
      
      ImageIcon imageIcon = new ImageIcon(
         getClass().getResource(urlEstrellaDelta));
      labelEstrellaDelta.setIcon(imageIcon);
      labelEstrellaDelta.setLocation(60, 20);
      labelEstrellaDelta.setSize(300, 310);
      
      jPanel1.add(labelEstrellaDelta);
      
      rbTextField.setVisible(false);
      raTextField.setVisible(false);
      rcTextField.setVisible(false);
      
      
      comboBoxRa.setVisible(false);
      comboBoxRb.setVisible(false);
      comboBoxRc.setVisible(false);
      
      r1TextField = new JTextField();
      r2TextField = new JTextField();
      r3TextField = new JTextField();
      
      labelDeltaEstrella.setSize(300, 310);
      labelDeltaEstrella.setLocation(60, 20);
      
      r1TextField.setLocation(60, 190);
      r1TextField.setSize(50, 30);
      r1TextField.setText(String.valueOf(r1));
      r1TextField.setEnabled(false);
      
      r2TextField.setLocation(230, 150);
      r2TextField.setSize(50, 30);
      r2TextField.setText(String.valueOf(r2));
      r2TextField.setEnabled(false);
      
      
      r3TextField.setLocation(200, 220);
      r3TextField.setSize(50, 30);
      r3TextField.setText(String.valueOf(r3));
      r3TextField.setEnabled(false);
      
      
      r1TextField.setText(String.valueOf(r1));
      r2TextField.setText(String.valueOf(r2));
      r3TextField.setText(String.valueOf(r3));
      
      jPanel1.add(r1TextField);
      jPanel1.add(r2TextField);
      jPanel1.add(r3TextField);
      jPanel1.repaint();
      
   }
   
   private void cambiarImagenPonerResultadoEstrellaDelta(String ra, String rb, String rc) {
      labelEstrellaDelta.setVisible(false);
      labelDeltaEstrella.setVisible(true);
      
      ImageIcon imageIcon = new ImageIcon(getClass().getResource(urlDeltaEstrella));
      labelDeltaEstrella.setIcon(imageIcon);
      labelDeltaEstrella.setLocation(60, 20);
      labelDeltaEstrella.setSize(300, 310);
      
      jPanel1.add(labelDeltaEstrella);
      
      r1TextField.setVisible(false);
      r2TextField.setVisible(false);
      r3TextField.setVisible(false);
      
      
      comboBoxR1.setVisible(false);
      comboBoxR2.setVisible(false);
      comboBoxR3.setVisible(false);
      
      raTextField = new JTextField();
      rbTextField = new JTextField();
      rcTextField = new JTextField();
      
      labelEstrellaDelta.setSize(300, 310);
      labelEstrellaDelta.setLocation(60, 20);
      
      raTextField.setLocation(260, 200);
      raTextField.setSize(50, 30);
      raTextField.setEnabled(false);
      
      rbTextField.setLocation(30, 200);
      rbTextField.setSize(50, 30);
      rbTextField.setEnabled(false);
      
      
      rcTextField.setLocation(140, 30);
      rcTextField.setSize(50, 30);
      rcTextField.setEnabled(false);
      
      
      raTextField.setText(String.valueOf(ra));
      rbTextField.setText(String.valueOf(rb));
      rcTextField.setText(String.valueOf(rc));
      
      jPanel1.add(raTextField);
      jPanel1.add(rbTextField);
      jPanel1.add(rcTextField);
      jPanel1.repaint();
   }
   
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCalcular;
    private javax.swing.JTextArea ecuacionLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limpiar;
    // End of variables declaration//GEN-END:variables
}
